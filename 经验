1.取某数的绝对值使用n=0-n解决
2.没有给定具体的变量范围,就使用long long,防止算法题试验值过大.
类型	        存储大小	    值范围
char	        1 字节	      -128 到 127 或 0 到 255
unsigned char	1 字节	      0 到 255
signed char	  1 字节	     -128 到 127
int	          2 或 4 字节	-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647
unsigned int	2 或 4 字节	  0 到 65,535 或 0 到 4,294,967,295
short	        2 字节	      -32,768 到 32,767
unsigned short	2 字节	      0 到 65,535
long	        4 字节	       -2,147,483,648 到 2,147,483,647
unsigned long	4 字节	        0 到 4,294,967,295
即变量范围约在正负20万之间
3.自创函数在main()函数中间单独成排使用时需要写 ;
int main()
{
    xuexi();//注意;必须带上
    kecheng(5);//注意;必须带上
    return 0;
}
4.赋值使用=,在条件语句等之中判断时用==
5.数组引用之中不需要加[]
 #include <stdio.h>
void replaceMax(int arr[],int value)
{
    int max = arr[0];
    int index = 0;
    int i;
    for(i=1;i<5;i++)
    {
        if(arr[i]>max)
        {
            max=arr[i];         //将数组中较大的数赋值给max
            index = i;  //记录当前索引
        }                
    }  
    arr[index] = value;
}

int main()
{
    int arr1[] = {10,41,3,12,22};
    int arr2[] = {1,2,3,4,5};
    int i;
    replaceMax(arr1 , arr2[0]  ); //将数组arr1和数组arr2的第一个元素传入函数中//   ***此处不需要加括号***
    for(i=0;i<5;i++)
    {
        printf("%d ",arr1[i]);                
    }
    return 0;    
}
6.自创函数()之中需要int
#include <stdio.h>
int getIndex(int arr[5],int value)
{
    int i;
    int index;
    for(i=0;i<5;i++)
    {
       /* 请完善数组查询功能 */
       if(arr[i]==value)       
        {
            index=i;
            break;
        }  
       else index=-1;
       
       
    }
    return index;
}

